getwd()
setwd("C:\\r-project\\R-programming\\docs\\Exercise2")
getwd()
require(tidyverse)
x = matrix(c(3, -4, 3, -2,
1, -1, 1, -1,
2, -4, 2, -3,
2, -1, 1, -3), byrow = T, nrow = 4)
a = c(a,b,c,d)
a = c("a","b","c","d")
y = c(8, 4, 1, 5)
rm(list = "a")
a <- solve(x) %*% y
x %*% a == y
all.equal(x %*% a, y)
all.equal(x %*% a, y)
x
y
x %*% a
solve(x) %*% y
a
all.equal(x %*% a, y)
# 1.
X <- matrix(c(3,-4,3,-2,
1,-1,1,-1,
2,-4,2,-3,
2,-1,1,-3), nrow = 4, byrow = T)
y <- matrix(c(8,4,1,5), nrow = 4)
a = solve(X)%*%y
a
all.equal(X %*% a, y)
X = matrix(c(3, -4, 3, -2,
1, -1, 1, -1,
2, -4, 2, -3,
2, -1, 1, -3), byrow = T, nrow = 4)
y = c(8, 4, 1, 5)
a <- solve(X) %*% y
all.equal(x %*% a, y)
all.equal(X %*% a, y)
y = matrix(c(8, 4, 1, 5), nrow = 4)
a <- solve(X) %*% y
all.equal(X %*% a, y)
rm(list = 'x')
# a.
set.seed(20200511)
c <- rep(rnorm(25, 5, sqrt(3)), 100)
c
# b.
mean(c); sd(c)
require(readxl)
## 3.
country_info <- read_excel("country_info.xlsx")
country_pubhealth <- read_csv("country_pubhealth.csv")
covid19 <- read_delim("covid19-cases-20200601.txt", sep = "\t")
covid19 <- read_delim("covid19-cases-20200601.txt", delim = "\t")
# b.
covid_full <- covid19 %>%
left_join(country_info, by = iso_code) %>%
left_join(country_pubhealth, by = "location")
country_info
country_info
country_pubhealth
covid19
# b.
covid_full <- covid19 %>%
left_join(country_info, by = "iso_code") %>%
left_join(country_pubhealth, by = "location")
covid_full
glimpse(covid_full)
covid_full <- covid_full %>%
filter(date >= as.Date("2020-01-20") &
<= as.Date("2020-05-31"))
covid_full <- covid_full %>%
filter(date >= as.Date("2020-01-20") &
date <= as.Date("2020-05-31"))
glimpse(covid_full)
covid_full <- covid_full %>%
mutate(continent = gsub("(.+\\s)", "", region))
?matches
?matches
covid_full <- covid_full %>%
mutate(*_per_million = (matches("(case|death)")/population)*10^6)
covid_full <- covid_full %>%
mutate(per_million = (matches("(case|death)")/population)*10^6)
# b.
covid19_full <- covid19 %>%
left_join(country_info, by = "iso_code") %>%
left_join(country_pubhealth, by = "location")
covid19_full <- covid_full %>%
filter(date >= as.Date("2020-01-20") &
date <= as.Date("2020-05-31"))
covid19_full <- covid_full %>%
mutate(continent = gsub("(.+\\s)", "", region))
covid19_full <- covid_full %>%
mutate(per_million = (matches("case|death")/population)*10^6)
covid19_full <- covid_full %>%
mutate_at(vars(matches("case|death")),
list(per_million = ~ ./population*10^6))
covid19_full <- covid19_full %>%
filter(date >= as.Date("2020-01-20") &
date <= as.Date("2020-05-31"))
covid19_full <- covid19_full %>%
mutate(continent = gsub("(.+\\s)", "", region))
covid19_full <- covid19_full %>%
mutate_at(vars(matches("case|death")),
list(per_million = ~ ./population*10^6))
rm(list = "covid_full")
covid19_full <- covid19_full %>%
group_by(location) %>%
filter(date == as.Date("2020-05-31")|total_cases >= 1000)
# b.
covid19_full <- covid19 %>%
left_join(country_info, by = "iso_code") %>%
left_join(country_pubhealth, by = "location")
covid19_full <- covid19_full %>%
filter(date >= as.Date("2020-01-20") &
date <= as.Date("2020-05-31"))
covid19_full <- covid19_full %>%
mutate(continent = gsub("(.+\\s)", "", region))
covid19_full <- covid19_full %>%
mutate_at(vars(matches("case|death")),
list(per_million = ~ ./population*10^6))
covid19_full <- covid19_full %>%
group_by(location) %>%
filter(max(total_cases) >= 1000)
?row_number
x <- c(5, 1, 3, 2, 2, NA)
row_number(x)
row_number() == 1
covid19_full <- covid19_full %>%
mutate(total_tests = ifeles(row_number() == 1 &
is.na(first(total_tests),
0, total_tests))
0, total_tests))
covid19_full <- covid19_full %>%
mutate(total_tests = ifeles(row_number() == 1 &
is.na(first(total_tests)),
0, total_tests))
covid19_full <- covid19_full %>%
mutate(total_tests = ifelse(row_number() == 1 &
is.na(first(total_tests)),
0, total_tests))
covid19_full <- covid19_full %>%
mutate(total_tests = fill(total_tests == 0, .direction = "down"))
covid19_full <- covid19_full %>%
fill(total_tests == 0, .direction = "down")
covid19_full <- covid19_full %>%
fill(total_tests, .direction = "down")
covid19_full
# b.
covid19_full <- covid19 %>%
left_join(country_info, by = "iso_code") %>%
left_join(country_pubhealth, by = "location")
covid19_full <- covid19_full %>%
filter(date >= as.Date("2020-01-20") &
date <= as.Date("2020-05-31"))
covid19_full <- covid19_full %>%
mutate(continent = gsub("(.+\\s)", "", region))
covid19_full <- covid19_full %>%
mutate_at(vars(matches("case|death")),
list(per_million = ~ ./population*10^6))
covid19_full <- covid19_full %>%
group_by(location) %>%
filter(max(total_cases) >= 1000)
covid19_full <- covid19_full %>%
mutate(total_tests = ifelse(row_number() == 1 &
is.na(first(total_tests)),
0, total_tests))
covid19_full <- covid19_full %>%
fill(total_cases, .direction = "down")
glimpse(covid19_full)
covid19_full <- covid19_full %>%
mutate(total_tests = ifelse(row_number() == 1 &
is.na(first(total_tests)),
0, total_tests))
covid19_full <- covid19_full %>%
fill(total_cases, .direction = "down")
covid19_full <- covid19_full %>%
mutate_at(vars(matches("_test"),
list(per_thousand =  ~ ./population * 10^3)))
covid19_full <- covid19_full %>%
mutate_at(vars(contains("_test"),
list(per_thousand =  ~ ./population * 10^3)))
covid19_full <- covid19_full %>%
mutate_at(vars(contains("_test")),
list(per_thousand =  ~ ./population * 10^3)))
covid19_full <- covid19_full %>%
mutate_at(vars(contains("_test")),
list(per_thousand =  ~ ./population * 10^3))
covid19_full <- covid19_full %>%
select(iso_code, date, location, continent, population, total_cases, new_cases, total_deaths, new_deaths, total_tests, new_tests, new_tests_smoothed, total_cases_per_million, new_cases_per_million, total_deaths_per_million, new_deaths_per_million, total_tests_per_thousand, new_tests_per_thousand, new_tests_smoothed_per_thousand )
glimpse(covid19_full)
?theme_minimal
# c.
covid19_full %>%
ggplot() +
aes(x = scale_x_date(date), y = total_tests) +
geom_bar(color = "white", fill = "lightblue") +
ggtitle("Daily COVID-19 test in South Korea") +
theme_minimal(base_size = 15, base_line_size = 0.5)
?scale_x_date
